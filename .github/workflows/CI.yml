name: CI

on:
  push:
    branches:
      - "master"
      - "maintenance/.+"
  pull_request:
    branches:
      - "master"
      - "maintenance/.+"
  schedule:
    # Nightly tests run on master by default:
    #   Scheduled workflows run on the latest commit on the default or base branch.
    #   (from https://help.github.com/en/actions/reference/events-that-trigger-workflows#scheduled-events-schedule)
    - cron: "0 0 * * *"

jobs:
  test:
    name: Test on ${{ matrix.cfg.os }}, Python ${{ matrix.python-version }}, RDKit=${{ matrix.cfg.rdkit }}, OpenEye=${{ matrix.cfg.openeye }}
    runs-on: ${{ matrix.cfg.os }}
    strategy:
      fail-fast: false
      matrix:
        python-version:
          - 3.6
          - 3.7
          # Uncomment when ready ;)
          # - 3.8
        cfg:
          - os: ubuntu-latest
            rdkit: "true"
            openeye: "false"

          - os: ubuntu-latest
            rdkit: "false"
            openeye: "true"

          - os: ubuntu-latest
            rdkit: "true"
            openeye: "true"

          - os: macOS-latest
            rdkit: "true"
            openeye: "false"

    env:
      CI_OS: ${{ matrix.cfg.os }}
      PYVER: ${{ matrix.python-version }}
      RDKIT: ${{ matrix.cfg.rdkit }}
      OPENEYE: ${{ matrix.cfg.openeye }}
      OE_LICENSE: ${{ github.workspace }}/oe_license.txt

    steps:
    - uses: actions/checkout@v2
    - name: Additional info about the build
      shell: bash
      run: |
        uname -a
        df -h
        ulimit -a
    - name: Fix conda permissions in MacOS
      shell: bash
      if: startsWith(matrix.cfg.os, 'macOS')
      run: |
        sudo chown -R $(id -u):$(id -g) ${CONDA}
    - name: Configure conda
      shell: bash
      run: |
        . devtools/gh-actions/initialize_conda.sh
        conda activate
        conda config --set always_yes yes
        conda config --add channels omnia --add channels conda-forge
        conda install --quiet conda conda-build jinja2 anaconda-client
        conda update --quiet --all
        conda info --all
        conda list
    - name: Decrypt OpenEye license
      shell: bash
      env:
        ENC_OE_LICENSE: ${{ secrets.OE_LICENSE__EXP_JUN2020 }}
      run: |
        echo "${ENC_OE_LICENSE}" > ${OE_LICENSE}
    - name: Specify conda YAML file
      shell: bash
      run: |
        .
        if [[ "$RDKIT" == true && "$OPENEYE" == false ]]; then
            CONDA_YAML="devtools/conda-envs/rdkit-2019.yaml"
        elif [[ "$RDKIT" == false && "$OPENEYE" == true ]]; then
            CONDA_YAML="devtools/conda-envs/openeye-2019.yaml"
        elif [[ "$RDKIT" == true && "$OPENEYE" == true ]]; then
            CONDA_YAML="devtools/conda-envs/cmiles.yaml"
        fi
        echo $CONDA_YAML
        echo '::set-env name=CONDA_YAML::$CONDA_YAML'
        echo $CONDA_YAML
    - name: Setup conda environment
      uses: goanpeca/setup-miniconda@v1
      with:
         activate-environment: test
         environment-file: $CONDA_YAML
         auto-activate-base: false
    - name: Environment Information
      shell: bash -l {0}
      run: |
        conda info
        conda list
    - name: Install package
      shell: bash
      run: |
        . devtools/gh-actions/initialize_conda.sh
        conda activate test
        python -m pip install --no-deps .
    - name: Test the package
      shell: bash
      run: |
        . devtools/gh-actions/initialize_conda.sh
        conda activate test
        conda list
        pytest -v
