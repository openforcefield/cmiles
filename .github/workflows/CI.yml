name: CI

on:
  push:
    branches:
      - "master"
      - "maintenance/.+"
  pull_request:
    branches:
      - "master"
      - "maintenance/.+"
  schedule:
    # Nightly tests run on master by default:
    #   Scheduled workflows run on the latest commit on the default or base branch.
    #   (from https://help.github.com/en/actions/reference/events-that-trigger-workflows#scheduled-events-schedule)
    - cron: "0 0 * * *"

jobs:
  test:
    if: (github.event_name == 'schedule' && github.repository == 'openforcefield/cmiles') || (github.event_name != 'schedule')
    name: Test on ${{ matrix.cfg.os }}, Python ${{ matrix.python-version }}, RDKit=${{ matrix.cfg.rdkit }}, OpenEye=${{ matrix.cfg.openeye }}
    runs-on: ${{ matrix.cfg.os }}
    strategy:
      fail-fast: false
      matrix:
        python-version:
          - 3.6
          - 3.7
          # Uncomment when ready ;)
          # - 3.8
        cfg:
          - os: ubuntu-latest
            rdkit: "true"
            openeye: "false"

          - os: ubuntu-latest
            rdkit: "false"
            openeye: "true"

          - os: ubuntu-latest
            rdkit: "true"
            openeye: "true"

          - os: macOS-latest
            rdkit: "true"
            openeye: "false"

    env:
      CI_OS: ${{ matrix.cfg.os }}
      PYVER: ${{ matrix.python-version }}
      RDKIT: ${{ matrix.cfg.rdkit }}
      OPENEYE: ${{ matrix.cfg.openeye }}
      OE_LICENSE: ${{ github.workspace }}/oe_license.txt

    steps:
    - uses: actions/checkout@v2
    - uses: conda-incubator/setup-miniconda@v2.1.1
      if: ${{ matrix.cfg.rdkit == 'TRUE' && matrix.cfg.openeye == 'FALSE' }}
      with:
        python-version: ${{ matrix.python-version }}
        activate-environment: test
        environment-file: devtools/conda-envs/rdkit-2020.yaml
        auto-activate-base: false
    - uses: conda-incubator/setup-miniconda@v2.1.1
      if: ${{ matrix.cfg.rdkit == 'FALSE' && matrix.cfg.openeye == 'TRUE' }}
      with:
        python-version: ${{ matrix.python-version }}
        activate-environment: test
        environment-file: devtools/conda-envs/openeye-2020.yaml
        auto-activate-base: false
    - uses: conda-incubator/setup-miniconda@v2.1.1
      if: ${{ matrix.cfg.rdkit == 'TRUE' && matrix.cfg.openeye == 'TRUE' }}
      with:
        python-version: ${{ matrix.python-version }}
        activate-environment: test
        environment-file: devtools/conda-envs/cmiles.yaml
        auto-activate-base: false
    - name: Additional info about the build
      shell: bash
      run: |
        uname -a
        df -h
        ulimit -a
    - name: Decrypt OpenEye license
      if: ${{ matrix.cfg.openeye == 'TRUE' }}
      shell: bash
      env:
        ENC_OE_LICENSE: ${{ secrets.OE_LICENSE }}
      run: |
        echo "${ENC_OE_LICENSE}" > ${OE_LICENSE}
    - name: Environment Information
      shell: bash -l {0}
      run: |
        conda info
        conda list
    - name: Check OpenEye license
      shell: bash -l {0}
      if: ${{ matrix.cfg.openeye == 'TRUE' }}
      run: |
        python -c "import openeye; assert openeye.OEChemIsLicensed()"
    - name: Install package
      shell: bash -l {0}
      run: |
        python -m pip install --no-deps .
    - name: Test the package
      shell: bash -l {0}
      run: |
        pytest -v --cov=cmiles --cov-report=xml --cov-config=setup.cfg cmiles/tests
    - name: Codecov
      uses: codecov/codecov-action@v1
      with:
        file: ./coverage.xml
        fail_ci_if_error: true
